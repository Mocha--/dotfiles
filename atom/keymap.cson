# Your keymap
# # Atom keymaps work similarly to style sheets. Just as style sheets use # selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson
# overwrite default keymap

# treeview
'.tree-view':
  'o': 'tree-view:open-selected-entry'
  'tab': 'tree-view:toggle-focus'

'atom-text-editor.vim-mode-plus.insert-mode.autocomplete-active':
  'tab': 'autocomplete-plus:confirm'

# keymap for vim
'atom-text-editor.vim-mode-plus.insert-mode':
  'j k': 'vim-mode-plus:activate-normal-mode'
  'enter': 'editor:newline'
  'tab': 'editor:indent'

'atom-text-editor.vim-mode-plus:not(.insert-mode)':
  'shift-k': 'Mooocha:move-10-lines-up'
  'shift-j': 'Mooocha:move-10-lines-down'
  'shift-h': 'pane:show-previous-item'
  'shift-l': 'pane:show-next-item'
  'tab': 'tree-view:toggle-focus'
  'shift-w': 'Mooocha:move-to-beginning-of-next-3-words'
  'shift-b': 'Mooocha:move-to-beginning-of-previous-3-words'
