# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  'exec-and-forget sketchybar'
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 0

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focus-changed = ['move-mouse window-lazy-center'] # Mouse lazily follows any focus (window or workspace)

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Notify Sketchybar about workspace change
exec-on-workspace-change = ['/bin/bash', '-c',
  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE'
]

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 16
inner.vertical =   16
outer.left =       16
outer.bottom =     16
outer.top = [{monitor.'built-in' = 16}, 56]
outer.right =      16

[workspace-to-monitor-force-assignment]
4 = [1, 'secondary', 'built-in']
5 = [3, 'built-in']

# on Figma open
[[on-window-detected]]
if.app-id = 'com.figma.Desktop'
run = ['move-node-to-workspace 1']

# on Chrome open
[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = ['move-node-to-workspace 1']

# on Safari open
[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = ['move-node-to-workspace 1']

# on Firefox open
[[on-window-detected]]
if.app-id = 'org.mozilla.firefox'
run = ['move-node-to-workspace 1']

# on Finder open
[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = ['move-node-to-workspace 1']

# on Iterm2 open
[[on-window-detected]]
if.app-id = 'com.googlecode.iterm2'
run = ['move-node-to-workspace 2']

# on Cursor open
[[on-window-detected]]
if.app-id = 'com.todesktop.230313mzl4w4u92'
run = ['move-node-to-workspace 3']

# on Notion open
[[on-window-detected]]
if.app-id = 'notion.id'
run = ['move-node-to-workspace 4']

# on Slack open
[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = ['move-node-to-workspace 4']

# on ChatGPT open
[[on-window-detected]]
if.app-id = 'com.openai.chat'
run = ['move-node-to-workspace 4']

# on sequel-ace open
[[on-window-detected]]
if.app-id = 'com.sequel-ace.sequel-ace'
run = ['move-node-to-workspace 4']

# on YoutubeMusic open
[[on-window-detected]]
if.app-id = 'com.google.Chrome.app.cinhimbnkkaeohfgghhklpknlkffjgod'
run = ['move-node-to-workspace 5']

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-comma = 'layout h_tiles'
alt-period = 'layout v_tiles'
alt-slash = 'layout v_accordion'
alt-shift-f='layout floating tiling'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
ctrl-h = 'focus left --boundaries-action wrap-around-the-workspace'
ctrl-j = 'focus down --boundaries-action wrap-around-the-workspace'
ctrl-k = 'focus up --boundaries-action wrap-around-the-workspace'
ctrl-l = 'focus right --boundaries-action wrap-around-the-workspace'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
# ctrl-shift-h = 'move left'
# ctrl-shift-j = 'move down'
# ctrl-shift-k = 'move up'
# ctrl-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
ctrl-shift-minus = 'resize smart -50'
ctrl-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
ctrl-a = 'workspace 1'
ctrl-s = 'workspace 2'
ctrl-d = 'workspace 3'
ctrl-f = 'workspace 4'
ctrl-g = 'workspace 5'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
ctrl-shift-a = ['move-node-to-workspace 1', 'workspace 1']
ctrl-shift-s = ['move-node-to-workspace 2', 'workspace 2']
ctrl-shift-d = ['move-node-to-workspace 3', 'workspace 3']
ctrl-shift-f = ['move-node-to-workspace 4', 'workspace 4']
ctrl-shift-g = ['move-node-to-workspace 5', 'workspace 5']

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
ctrl-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout

backspace = ['close-all-windows-but-current', 'mode main']
# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

down = 'volume down'
up = 'volume up'
shift-down = ['volume set 0', 'mode main']
